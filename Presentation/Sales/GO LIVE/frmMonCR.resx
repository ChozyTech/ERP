<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAANkE3LLaAgAABmdJREFUWEfV
        V2tMlXUYf95zew+HyzmAx8Mh7kyal0WIVmqGlqnBASxMG1mtEkSBRCyXubJNqVkfBFx6POKFRCDBO93W
        ZepWzrWk1dbyUx/bcqOt1ocy+/V7XiQ7pdyqtf7bCx/O//3/Ls/zf57nFfk/rcyiTHdxS/GyUHOotbil
        pLe4OdSj/0taQm0lrSVVJTtLcv4dPV7JkirZLY/L9+kvTMSM1slYcWoxKk8uwvIT92De3gLkbA3CVeeA
        PCHnJZ87RXz/DJkSWSAr5ZPUTX5s+PhR1F54EI98WoyiDwow78MCzOdTcf4urOovw4bPK7Hw9ZkwaozL
        8pCckoVS+PdIEJyH/To7nI+aL5bCfygRsktAL2CLGHDuscFss8Ozz4m4/U7EH3Bi0dkCNH5VgRm78mBb
        bVyRcqknCXPsRPySK09K/+3haZj19i2QnQIjLHAQ1EFw916HBRzfbsJ70I3kQx4EOmOR0hWL3CNJKPto
        Jir65oDu/UASW8dOoEa60zcHkHcsw1JtULUFTsUKHhNxwHzVAfsGA7KGrqyU76RaLkmNwPWMHUmvuDGl
        KwUrzs5HzDoXpIy/iNhHRyRHvI5a+0/ZkVQIVUcp3+eAe6cDtvUErZJfeOx+KZAVEpB5EpQ5jHqlrJIm
        /va1rU6Q3TwBRZ1TNTkvkcRdoyNQJA2uDU64djtgRKKVm9vtkNVyRZZJJ9MzY5gDDcLdp2GMazQvT9zk
        BYld5H539Dt3Sg65l/OpsJ4iWSLL5bRsYqLtMaJiHkPrDariod/Ig/w7Rx6Qu2X+sEmWzytcIxGDoSEB
        cP/SaAJqo8bwqT88BLFti1auCedqssFWz9+4177WgH2dbfDQOlk/orVLZBtxLsgkuS167yr5kpZCtvNp
        YbybCcD/tvC1bFfl8QdMJERM+CLM+D0xCOyNRUITk2u1DMh0CY1IQMQpSZJ2vX1p8rC8ZzmgwEO2D2X7
        VXAfCSQf5FXriMVNXfFIeMkcBM+1QvDXVUir63li4rB58vt76TzsoqyltaqcJKyrNqT8Kri/w2OBJ26P
        GQSfYZXcvy6SMmplwF1HhyopTiR9FA5xkzpBEq4dg9VNbb+mfBA8oWkE5UqK5FaeKcX2b+uRvSWoZDX7
        R0mCm40GQdw+F7ztjDdtH4tyBa/sW4h7zxQg72gK6j4rRy4b1ZidsDUY8O52X4v5KJUvf+duzH1/Knz7
        XfAfjEF6tw+P9S9A1taUsTvhWGcgtWOUMafyUO8cFPRlw8f+EKBzwc54pHclILcnCfefvh1pL/rH7oRV
        QIbLdsbctkYG5h3OZxMKIJF5MwSe0e1FzuFETCKByUeSUXFuJlKe943BCbdkSi0LiF6pG2S7vdYYyI/k
        IvNwMhJVOa+pKlfwLD55vcmYQvD84wEUnAhg0btTEdxMEprwcr26MFgsnCNeGy0+1TKQ1TwR/r1x8IZN
        JGmB2h9ngatyBZ961I9pR/yY0ulHfncA03uCmHs8Gx7tkNUsglFLy6SWSy2bIy0tv9UCZ6MdBq+ulmej
        3kAi23D2YZ8FPplPPlVnh31wNdhhcq+7kfXlabbypzi+aRuIWtootLbzYG0gnO2yhuFhWo1IG5I2JjYo
        OwlkM+uHlKvtM/qC8DexcC1jg9NGN9T0tAFqI/zTchP4IpuLErhMIv1WSxUxbkhEW7K25jVyJSUchzzG
        21JO8MKTQRQeS0XcRicI3jCSqYO/69Cgk81mWvoCidRag8fX1pChw4YOHTp86BCiwwht1Akooz3BAteY
        W8pPpGDWW2m4OZKsjv5Mrd7REdCxSccnAtte5eDZaoN9iw1Go+WKHnZJxy/WepjP2jGhxYOMjsFsn3wV
        fDrB73gzDXPfzYBnPdWvkfbRgl/bp4MkB0rHVpvVFxLaXUjk8Dmhg5nO4TO1m1ftjehsH1Ku4LP70pHS
        FKvu9YsOuONYpjVSV8sV+0aW5TZtxwTnPU/90z0fUq4xV9tV+cQtHnXrV7q5YBzYf3hFPy70I6NaLpvP
        0/KwB6nt8cjt5T1nzKcd8+NWXrXCU0Hc2hPApHASzLWcG6vkHMGvPyuMg5HP+tyq4mcX88DObukhGd9L
        TiS9bGLCNjdin3PAyQbG6fdH7mtjyg13hcdB4eori1sWTwm1hFaGdpS1lbaW9Za2lveUtpb2lu4oey20
        I1SpH7DjP/0/ePM3OXkdjHpGlTMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBhQGBQkRERQUFRUWDRYYFxYVFR8YGBcdIR4gGBkYGyIc
        JyYeIxkvGRoXHzIsJDApLC44HB83NTAqNSYwODX/2wBDAQkKCg4LDRkODxo1HB4kNTUwLDUvNTUpLDUp
        NDU1KjY1NSwrNTQpLCs1NTUpLik1KSwpLDQ1NDU1LCwsLC8sNjL/wAARCABJAEkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2932KTWBqvjW30mXbJIqn0J5/Sr2vXP2bTpGHZSa+fHSTV9W/
        vSSSgDJxkk4HXgCunD0VVu5OyQHsv/CzLT/nsn6/4Uf8LMtP+eyfr/hXkTeGZ00mS4Kjy1287xn5sgcZ
        z2q1e+Bruwv7OF4wHmZgg8xTnAycnOB+NdH1eh/MI9T/AOFmWn/PZP1/wo/4WZaf89k/X/CvJtT8I3Ok
        XQjlQBjBJLgOp+VAWY5BxnCniiw8JXGpa1cW0aAyRlg4LgAYbaeSeefSn9Wo2vzAes/8LMtP+eyfr/hT
        4fiRaSyqBMmSfcfzFeM2miS31jeSooKQqpc7gMbjhcA8npVrWfCVxoEMbToFDdMOrep7H2p/VaV+Xm1A
        +grS9W7jBU5qxXm/wovnl0tkYkhHIGfTrivR81584cknHsMxvFH/ACCZv9w/yrxjQ4ceI9P/AOvqP/0I
        V7N4q40ef/cb+VeIeFtXD+ItPV+v2qMAjv8AMOtdeGvyTEdvcR/8W4uR7wfzauk8VLnxz4XPpNL/ACFY
        kqh/h9PjkEw/zNdD4lXPjLw4fSWT+QrG/wCv5DMTx+m7xOn/AGCLr/0CSo/Babfihrx/2pv/AEbVzxvH
        u8Rp/wBgu5/9AemeEY9vxH1o/wC1L/6Mqk/cfp+oHLeGY9ng7xP/ANc4P/QjXQ/FVPM07T/qP5NWRoUO
        PB3iUesMX8zWn8WL0WekaeSMn5cD/gLVtvXXr+ghPhcmyKb/AK6f0r0qvLvhFcm6trhm/wCevbtxXqNc
        tf8AiyGY3ir/AJA8/wD1zb+Rr568OH/irNL/AOv2L/0MV9C+Kv8AkDT/APXNv5GvnHTL0adrVrMQWEc6
        uQDgna2cfpXVg1eM0hM9FluTbfC24Kttbdb455+81df4q1MReO/CyqUIaWXcc9OB7/zrxpdchutZ0t5F
        ASGEIwYCQt8zMcAYx979Pep21G0woCKB9nlH+p+beygL0bbgNnBxwPU03Qf5/iFz0zx5q4t/E6KAG/4l
        F02Q3oknH44qHwXrQuPijr6HaFVpvm3df3uPpXlOu3VtPdW32dRGohVWBUAbgSN2MnJ27c+pz0rTutTs
        5raVVjAYzRMGMPA2jBAG7hSM5HXODnin7C0bd0BqaDqbXnw+8Y72H/HvDtHA7nOMV0Xxl/5Auk/8B/8A
        QWrz3WtQtrqxlEahWN4XU7Au2PDDbkk9yDx/Stfxt4+TxdYWaLE0fl45LhgcAjsB61oqcvaqaQHWfBj/
        AI8bj/rt/SvV68n+C/8Ax4XH/Xb+lesVwYj+LIaMbxV/yBp/+ubfyNfMyqJJwC20F8FsZ2jPJ/KvqDxB
        b/adNlX1UivmG/tGsL+aNxhlcgg/56V04J/EhM9gQNY+MtO06Gxhksmt1XzfJyWQod0pk6A57dTn3ryb
        V4I7TWbuOJ98azOqP/eUHAP5Vbi8Z3kGnCBbmURiPYFDcBcYx+VYua6qNN03qK56ZYu/h3wDokljbR3T
        TyO07tB5pEmQBFjqoHK8/wB3PesH4lWMVh4vcRYUvEjyxL0icj5kGOPesLTvElzpFuyQXEsSltxVHKgn
        gZwO+APyqnc3TXlzJJIxd2bLMxyWPqT60qdJwle4XO68IJ/ZXgLUry3iS4uftKxsrx+Z5MfUMF6nJz09
        B6VF8RbdXsdDuXjW3uZrbM0CrtxjhXx2zyMe3sa5TSdfn0KSRreV4iwAbacZx0zUWparLrF4ZZ5GkcgD
        cxycDoPpRGk1U5v+HC56r8Ff+Qfcf9dv6V6zXmXwa0x7bQmdhjfIWX6dAa9OxXmV3epIaMjWrRrokDpi
        uN1L4frqMmXQN9RXpD9KZWSbWqGeWf8ACq4v+eQ/X/Gj/hVcX/PIfr/jXqdFV7SfdgeWf8Kri/55D9f8
        aP8AhVcX/PIfr/jXqdFHtJ92B5Z/wquL/nkP1/xqSD4YRQygiNf1P869Poo9pLuwMLQtKbT3X0roqalO
        qAP/2Q==
</value>
  </data>
</root>