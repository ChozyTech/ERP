<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="filter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H7DjP/0/ePM3OXkdjHpGlTMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>