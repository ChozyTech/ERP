<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBggGBQkIBwgKCQkWDRYODRcMDRoTHhAWKRwkIB8cHigj
        JzI2IyUvJR4qKzssLzMtODg0ISo3NjwtNTItODD/2wBDAQkKCg0LDhkODhk1JB4kNS81NTU1NTU1NTU1
        LjUqNTQ1NSw1NSw1NTUwNDUsNTU1NSosLjU0NTU1NTUsNTU2Niz/wAARCABAAEADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GkJxQTgc0xm7nAA5oAfk1l6/4isvDdh9qv3PJ2xqnLOfQD+t
        eK6/r1zd+LL6/t7mWNvOYRNG5UhAcLgj2AqjqOr3urSpJqF1Jcuq7FMhzgVxSxW6SPo6OSXcZTlp1XX0
        PeNA8RWXiSw+1WDng4kV+GQ+hH9a1MmvnPTtXvdJleTT7qS2dl2MYzjIq9oGvXNp4rsr+4upZG85RK0j
        liUJw2SevBNEcVsmgrZJZylCWnRfoe/A5pajVu4wQeaeDkcV2nzhHKSJF9MH868F8Z3moSeJ9Qt9QuZp
        Qtw4QO5wq5yuB0AxivZvEniCDw/pE1/dKzKp2oq9XboB/wDX9K8l+x/8JmL7xBql+bM/aY7fbBZmbJIA
        XGGB44Hc1y4hc1orc9rKmqLlWn8O1/M5bdRurq4PAAJuEu9SaORdTGmqLezacMxRXDHDDaMNzxxiqDeG
        rXTrK6u9c1ZbKBL97CMxQGcySLnccAjCjH6Y64zyexn2Pd/tCg9pfmYe6jdXUH4e3v2bWiLhXurVgFjj
        j3faFKhwVOeu3nGDzxT7/wCHzaXqRgvNUjjgSwN9dyeST5Kg4KgA/Ocj2o9jPsH9oYf+YoeDbzUE8T6f
        b6fczRBrhA4RyAy5y2R0Ixmve4iTI3pgfnXgkcjeEbzSde0i6S+tZRIYGkhKE7TtdGUk4PPUHnqK9n8N
        +IIPEGkQ39qrKrHa6t1RuhH/ANf0rrw/u3i9zw81ftXGrD4dr+fmP1bS7fUrSaxvovNtnH5d/wACDyDX
        jOtaje+Cv7U8OaTduGNxHIJ4pDGyDAO3jvg4PP8AhXud2xDIO3P514f4q8FeIv7dvrz7DJdxPO8itB8+
        QSSBgcjj2q6yejitTmwEovmp1H7vbzM3SPGeqaBpUdrp7v539p/2hNI8pPnZTa0bj+IHqST1564NNj8T
        WogntLnw/Dc6b9sN5bw/amQwORhgGA5Q/wB3H496xCSpIIIPfNJurm9pI9l4Wi3dI6KX4ga1J/aE8Yjt
        r2a8iuUkiP8AqAi7QoBBBG0Y59/WhvG93LPB9qtI7qD+zTp92skp/wBKUnJbIHytnuM1zu6lBLEAAk9s
        Ue0mT9UodjpLKT/hONe0XREhi0bTIhIsKLIZTk/M5LEDLHbxwMV7dpOl2+m2kNjYReVbJ+vf8STyTXjn
        hXwV4h/t2xvPsMlpEk6SM0/yYAIJGDyePavcLRiS47cfnXTRvu0eRj3FNQpyuv1JpYkmQo4yKpTWxtyG
        Ejsh4w2OPxrQpksSzRlHHFbnmng/iDwDrcviy+TT9PeW3aZpYmBVV2sc4yT2zj8KxvEXhTU/C7Q/2jGm
        xxlWiO4Z7qTjr/kZ5r6G/s5+n2hsf7ozVHVtHhvrN7TULf7ZaN1yM/y5B9xWDop7HpQzCaspLQ8H8O+F
        NT8UNN/Z0abEGWaUlRnsoOOv+Titnw/4B1uLxZZJqFg8VusyyysWVl2qc4yD3xj8a9f0nRobGzS00+3+
        x2i9MDH8+Sfc1f8A7Obp9obH+6M0KiluE8wm7qK0GQ2xuCWMjqg4wuOfxq7FEkKBEGBRFGsMYRBgU+tz
        zT//2Q==
</value>
  </data>
  <metadata name="DXEP.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>